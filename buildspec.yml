version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.7
  #  command:
  #    - echo Starting install phase at `date`
  pre_build: # Before Task
    commands:
      - echo Starting pre_build phase at `date`
      - aws sts get-caller-identity
      #- mkdir -p ./coverage/
      #- curl -qL -o aws_credentials.json 169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI &gt; aws_credentials.json
      #- aws configure set region $AWS_REGION
      #- aws configure set aws_access_key_id `jq -r '.AccessKeyId' aws_credentials.json`
      #- aws configure set aws_secret_access_key `jq -r '.SecretAccessKey' aws_credentials.json`
      #- aws configure set aws_session_token `jq -r '.Token' aws_credentials.json`
  build: # Build Task
    commands:
      - echo Build Phase started on `date`
      - credentials=$(aws sts assume-role --role-arn ${ASSUME_ROLE_ARN} --role-session-name "RoleSessionFromCodeBuild" | jq .Credentials)
      - export AWS_ACCESS_KEY_ID=$(echo ${credentials} | jq -r .AccessKeyId)
      - export AWS_SECRET_ACCESS_KEY=$(echo ${credentials} | jq -r .SecretAccessKey)
      - export AWS_SESSION_TOKEN=$(echo ${credentials} | jq -r .SessionToken)
      - aws sts get-caller-identity
      - zip cloudwatch-alarm-to-slack-python-x.zip cloudwatch-alarm-to-slack-python-x.py 
      - aws s3 cp cloudwatch-alarm-to-slack-python-x.zip s3://daisukeshimizu/
      #- aws lambda update-function-code --function-name cloudwatch-alarm-to-slack-python --zip-file fileb://cloudwatch-alarm-to-slack-python-x.zip
      - aws lambda update-function-code --function-name cloudwatch-alarm-to-slack-python --s3-bucket daisukeshimizu --s3-key cloudwatch-alarm-to-slack-python-x.zip
  post_build: # after Build Task
    commands:
      - echo Post Build Phase started on `date`
#artifacts: # Deliverables
#  files:
#    - '**/*'
#  base-directory: 'coverage'

